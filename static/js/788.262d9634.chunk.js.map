{"version":3,"file":"static/js/788.262d9634.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","redux/filter/filterSelectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { Notify } from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/contactsSelectors';\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport { Button, Flex, FormLabel, Text, Box, Input } from '@chakra-ui/react';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().positive().integer().required(),\n});\n\nexport const ContactForm = () => {\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, actions) => {\n    const newName = {\n      createdAt: new Date(),\n      name: values.name,\n      number: values.number,\n    };\n    const newContactNameNormalized = values.name.toLowerCase();\n    const findContact = contacts.find(\n      contact => contact.name.toLowerCase() === newContactNameNormalized\n    );\n    const handleAddContact = newName => {\n      Notify.success(`${values.name} has been added to your contacts`);\n      dispatch(addContact(newName));\n    };\n    findContact\n      ? Notify.warning(`${values.name} is already in contacts`)\n      : handleAddContact(newName);\n    actions.resetForm();\n  };\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\">\n      <Box\n        minW={[300, null, 480, null]}\n        minH=\"380px\"\n        boxShadow=\"dark-lg\"\n        p=\"5\"\n        borderRadius=\"lg\"\n      >\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={schema}\n        >\n          <Form>\n            <FormLabel m=\"0\">\n              <Text display=\"block\" py=\"2\" fontSize={['lg', null, '3xl', null]}>\n                Name\n              </Text>\n              <Input\n                as={Field}\n                variant=\"filled\"\n                size=\"lg\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Enter contact name\"\n              ></Input>\n              <ErrorMessage name=\"name\" component=\"span\"></ErrorMessage>\n            </FormLabel>\n            <FormLabel m=\"0\">\n              <Text display=\"block\" py=\"2\" fontSize={['lg', null, '3xl', null]}>\n                Number\n              </Text>\n              <Input\n                as={Field}\n                variant=\"filled\"\n                size=\"lg\"\n                type=\"tel\"\n                name=\"number\"\n                placeholder=\"Enter phone number\"\n              ></Input>\n              <ErrorMessage name=\"number\" component=\"span\"></ErrorMessage>\n            </FormLabel>\n            <Flex justifyContent=\"center\" mt=\"12\">\n              <Button\n                variant=\"outline\"\n                colorScheme=\"black\"\n                type=\"submit\"\n                fontWeight=\"normal\"\n                bg=\"teal.400\"\n                fontSize={['lg', null, '2xl', null]}\n                _hover={{ color: 'white' }}\n                transition=\"color 250ms cubic-bezier(0.4, 0, 0.2, 1)\"\n              >\n                Add contact\n              </Button>\n            </Flex>\n          </Form>\n        </Formik>\n      </Box>\n    </Flex>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { Notify } from 'notiflix';\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\nimport { chakra, ListItem, Text, Button, Flex } from '@chakra-ui/react';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDeleteContact = id => {\n    Notify.success(`${name} has been removed from your contacts`);\n    dispatch(deleteContact(id));\n  };\n  return (\n    <ListItem key={id} minW={[300, null, 480, null]}>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" w=\"100%\">\n        <Text fontSize={['sm', null, '2xl', 'null']}>\n          Name:\n          <chakra.span color=\"white\" ml=\"2\" mr=\"4\">\n            {name}\n          </chakra.span>\n          Number:\n          <chakra.span color=\"white\" ml=\"2\">\n            {number}\n          </chakra.span>\n        </Text>\n        <Button\n          variant=\"outline\"\n          colorScheme=\"black\"\n          size=\"xs\"\n          _hover={{ color: 'white' }}\n          bg=\"teal.400\"\n          fontWeight=\"normal\"\n          transition=\"color 250ms cubic-bezier(0.4, 0, 0.2, 1)\"\n          ml={['5', null, 'auto', null]}\n          type=\"button\"\n          onClick={() => handleDeleteContact(id)}\n        >\n          Delete\n        </Button>\n      </Flex>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n","export const selectFilter = state => state.filter;","import { useSelector } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { List, Flex, Heading } from '@chakra-ui/react';\nimport { selectContacts } from '../../redux/contacts/contactsSelectors';\nimport { selectFilter } from '../../redux/filter/filterSelectors';\n\nexport const ContactList = () => {\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <>\n      {contacts.length > 0 ? (\n        <Flex justifyContent=\"center\" alignItems=\"center\" py=\"4\">\n          <List maxW={[350, null, 500, null]} py=\"4\" w=\"100%\">\n            {getVisibleContacts().map(contact => (\n              <ContactListItem\n                key={contact.id}\n                name={contact.name}\n                number={contact.number}\n                id={contact.id}\n              />\n            ))}\n          </List>\n        </Flex>\n      ) : (\n        <Heading as=\"h2\" size=\"lg\" textAlign=\"center\" mt=\"10\">\n          You haven't saved contacts yet\n        </Heading>\n      )}\n    </>\n  );\n};\n\nContactList.propTypes = {\n  visibleContacts: PropTypes.arrayOf(PropTypes.shape),\n  onDeleteContact: PropTypes.func,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { changeFilter } from '../../redux/filter/filterSlice';\nimport { selectFilter } from '../../redux/filter/filterSelectors';\nimport { FormLabel, Text, Input, Flex, Box } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Flex justifyContent=\"center\">\n      <Box minW={[300, null, 480, null]} m=\"0\">\n        <FormLabel m=\"0\">\n          <Text py=\"12\" fontSize=\"3xl\" textAlign=\"center\" fontWeight=\"bold\">\n            Find contacts by name\n          </Text>\n          <Input\n            variant=\"filled\"\n            size=\"lg\"\n            placeholder=\"Find your contact\"\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n          ></Input>\n        </FormLabel>\n      </Box>\n    </Flex>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from '../redux/contacts/contactsSelectors';\nimport { fetchContacts } from '../redux/contacts/contactsOperations';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Heading } from '@chakra-ui/react';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Heading as=\"h2\" size=\"xl\" textAlign=\"center\" mb=\"7\">\n        Contacts\n      </Heading>\n      <ContactForm></ContactForm>\n      <Filter></Filter>\n      {isLoading && (\n        <Heading as=\"h2\" size=\"xl\" textAlign=\"center\" mb=\"7\">\n          Request in progress\n        </Heading>\n      )}\n      <ContactList></ContactList>\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","schema","yup","shape","name","required","number","positive","integer","ContactForm","dispatch","useDispatch","useSelector","alignItems","justifyContent","minW","minH","boxShadow","p","borderRadius","initialValues","onSubmit","values","actions","newName","createdAt","Date","newContactNameNormalized","toLowerCase","find","contact","Notify","addContact","handleAddContact","resetForm","validationSchema","m","display","py","fontSize","as","Field","variant","size","type","placeholder","component","mt","colorScheme","fontWeight","bg","_hover","color","transition","ContactListItem","id","w","ml","mr","onClick","deleteContact","handleDeleteContact","selectFilter","filter","ContactList","length","maxW","normalizedFilter","includes","getVisibleContacts","map","textAlign","Filter","value","onChange","e","changeFilter","currentTarget","Contacts","useEffect","fetchContacts","mb"],"sourceRoot":""}